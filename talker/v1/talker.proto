syntax = "proto3";

package talker.v1;

option go_package = "github.com/yolocs/try-connect/gen/talker/v1;talkerv1";

// A gRPC service definition used for lumberjack integration test.
service TalkerService {
  // Say hello with something OK to audit log in request/response.
  rpc Hello(HelloRequest) returns (HelloResponse);
  // // Whisper with something sensitive (shouldn't be audit logged) in
  // // request/response.
  // rpc Whisper(WhisperRequest) returns (WhisperResponse);
  // // Say bye with something OK to audit log in request,
  // // but we don't care the response at all.
  // rpc Bye(ByeRequest) returns (ByeResponse);

  // rpc Fibonacci(FibonacciRequest) returns (stream FibonacciResponse);
  // rpc Addition(stream AdditionRequest) returns (AdditionResponse);

  // // An api that is intended to always throw an error.
  // rpc Fail(FailRequest) returns (FailResponse);

  // // API for client streaming that throws an error if 4 is sent
  // rpc FailOnFour(stream FailOnFourRequest) returns (FailOnFourResponse);
}

message HelloRequest {
  string target = 1;
  string message = 2;
}

message HelloResponse {
  string message = 1;
}

message WhisperRequest {
  string target = 1;
  string message = 2;
}

message WhisperResponse {
  string message = 1;
}

message ByeRequest {
  string target = 1;
  string message = 2;
}

message ByeResponse {
  string message = 1;
}

message FibonacciRequest {
  uint32 places = 1;
  string target = 2;
}

message FibonacciResponse {
  uint32 position = 1;
  uint32 value = 2;
}

message AdditionRequest {
  uint32 addend = 1;
  string target = 2;
}

message AdditionResponse {
  uint64 sum = 1;
}

message FailRequest {
  string target = 1;
  string message = 2;
}

message FailResponse {
  string message = 1;
}

message FailOnFourRequest {
  string target = 1;
  uint32 value = 2;
}

message FailOnFourResponse {
  string message = 1;
}